#!/bin/sh

# Based on https://github.com/woxxy/MySQL-backup-to-Amazon-S3
# Under a MIT license

# the following line prefixes the backups with the defined directory. it must not end with a /
TARGET_PATH="<%= node['mysql']['backup_dir'] %>"

# when running via cron, the PATHs MIGHT be different. If you have a custom/manual MYSQL install, you should set this manually like 
MYSQLDUMPPATH=$(which mysqldump)

#mysqladmin path
MYSQLADMIN=$(which mysqladmin)

#create tmp dir
mkdir -p ${TMP_PATH}

DATESTAMP=$(date +".%m.%d.%Y")
DAY=$(date +"%d")
DAYOFWEEK=$(date +"%A")

PERIOD=${1-day}
if [ ${PERIOD} = "auto" ]; then
	if [ ${DAY} = "01" ]; then
        	PERIOD=month
	elif [ ${DAYOFWEEK} = "Sunday" ]; then
        	PERIOD=week
	else
       		PERIOD=day
	fi	
fi

echo "Selected period: $PERIOD."

#stop slave
${MYSQLADMIN} --host=localhost --port=3306 --user=dbRead --password=<%= @creds['root_password'] %> stop-slave

#make backup
${MYSQLDUMPPATH} --host=localhost --port=3306 --user=dbRead --password=<%= @creds['passwords']['dbRead'] %> --all-databases > ${MYSQLDUMPPATH}/mysql.sql

#start slave
${MYSQLADMIN} --host=localhost --port=3306 --user=dbRead --password=<%= @creds['root_password'] %>  stop-slave

#compress file
tar cvzf ${TARGET_PATH}/mysql_${PERIOD}_${DATESTAMP}.tar.gz ${MYSQLDUMPPATH}/mysql.sql

#remove tmp file
rm -Rv ${MYSQLDUMPPATH}/mysql.sql

echo "MySQL Backup done."